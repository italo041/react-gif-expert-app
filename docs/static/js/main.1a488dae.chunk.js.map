{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/Navbar.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","process","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","Navbar","href","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAuCeA,EApCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAoBzC,OACI,0BAAMC,SAbW,SAAEC,GACnBA,EAAEC,iBACFC,QAAQC,IAAI,eAAgBN,GAEvBA,EAAWO,OAAOC,OAAS,IAC5BV,GAAe,SAACW,GAAD,OAAWT,GAAX,mBAAyBS,OACxCR,EAAc,OAQd,2BACIS,KAAK,OACLC,MAAQX,EACRY,SArBc,SAAET,GACxBF,EAAeE,EAAEU,OAAOF,Y,uBCLnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,6BAC6EI,oCAD7E,SAEAC,MAAOH,GAFP,cAEbI,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QARvB,kBAYZO,GAZY,4CAAH,sDCgBLO,EAfK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IAE1B,OACI,yBAAKe,UAAU,0CACV,yBAAKC,IAAMhB,EAAMiB,IAAMN,IACvB,+BAAMA,EAAN,OCyBEO,EA5BC,SAAC,GAAoB,IAAjBpB,EAAgB,EAAhBA,SAAgB,ECFR,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPzB,EAASC,GACJyB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGvB,CAAErB,IAEGsB,EDb0BK,CAAc3B,GAAlCc,EAFmB,EAExBN,KAAaa,EAFW,EAEXA,QAErB,OACI,oCACI,wBAAIJ,UAAU,0CAAd,IAA2DjB,EAA3D,KAEEqB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACJD,UEnBpBkB,EAAS,WACpB,OACE,yBAAKZ,UAAU,gDACb,uBAAGA,UAAU,eAAea,KAAK,IAAjC,WAGA,yBAAKb,UAAU,2BAA2BL,GAAG,iBAC3C,wBAAIK,UAAU,0BCgBPc,EApBM,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IACfhD,mBAASgD,GADM,mBAC5CC,EAD4C,KAChClD,EADgC,KAGnD,OACE,oCACE,kBAAC,EAAD,MACA,6BACA,yBAAKkC,UAAU,aACb,kBAAC,EAAD,CAAalC,cAAeA,IAE5B,4BACGkD,EAAWvB,KAAI,SAACV,GAAD,OACd,kBAAC,EAAD,CAAS4B,IAAK5B,EAAUA,SAAUA,W,MCZ9CkC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1a488dae.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value ); \r\n    }\r\n    \r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        console.log(\"handleSubmit\", inputValue);\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( (cats) => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>  \r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n \r\n} \r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n\r\n  \r\n\r\n","\r\n\r\n\r\nexport const getGifs = async ( category ) => { \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=${process.env.REACT_APP_API_URL}`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json(); \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GifGridItem = ( {title, url} ) => {\r\n     \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n             <img src={ url } alt={ title } />\r\n             <p> { title } </p> \r\n        </div>\r\n    );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';  \r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GifGrid = ( { category } ) => {\r\n \r\n    const { data:images, loading } = useFetchGifs( category );\r\n   \r\n    return (\r\n        <>\r\n            <h3 className=\"pt-2 animate__animated animate__fadeIn\" > { category } </h3> \r\n\r\n            { loading && <p className=\"animate__animated animate__flash\" >Loading</p> }\r\n \r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            { ...img }\r\n                            /> \r\n                        ))\r\n                    } \r\n            </div>\r\n        </>      \r\n    );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n    },[ category ])\r\n  \r\n    return state; // { data: [], loading: true}\r\n\r\n}","import React from \"react\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"\" >\r\n        Gif App\r\n      </a>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n        <ul className=\"navbar-nav mr-auto\"> \r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\nimport { Navbar } from \"./components/Navbar\";\r\n\r\nconst GifExpertApp = ({ defaultCategories = [] }) => {\r\n  const [categories, setCategories] = useState(defaultCategories);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <hr />\r\n      <div className=\"container\">\r\n        <AddCategory setCategories={setCategories} />\r\n\r\n        <ol>\r\n          {categories.map((category) => (\r\n            <GifGrid key={category} category={category} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';  \n\nReactDOM.render( \n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}